<Application x:Class="GroceryStoreApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:GroceryStoreApp.CsClasses"
             xmlns:my="clr-namespace:WpfCustomControlLibrary;assembly=WpfCustomControlLibrary"
             xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
             StartupUri="Windows/AuthorizationWindow.xaml">
    <!--StartupUri="Windows/MenuWindow.xaml">-->
    <Application.Resources>
        <!--#region converter-->
        <local:RectangleConverter x:Key="RectangleConverter"/>
        <local:PriceConverter x:Key="PriceConverter"></local:PriceConverter>
        <local:QuantityConverter x:Key="QuantityConverter"></local:QuantityConverter>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></BooleanToVisibilityConverter>
        <!--#endregion-->
        <!--#region fonts-->
        <FontFamily x:Key="Blogger Sans">/Fonts/#Blogger Sans</FontFamily>
        <FontFamily x:Key="Caviar Dreams">/Fonts/#Caviar Dreams</FontFamily>
        <FontFamily x:Key="Kelson Sans RU">/Fonts/#Kelson Sans RU</FontFamily>
        <!--#endregion-->
        <!--<Style TargetType="Window">
            <Setter Property="FontFamily" Value="{StaticResource Blogger Sans}"></Setter>

        </Style>-->
        <!--#region geometry-->
        <Geometry x:Key="ProfilePathData">M48.6,49.318A82.867,82.867,0,0,1,35,50.681a82.868,82.868,0,0,1-13.6-1.362c-2.833-.633-1.957-7.542-1.957-7.542s0.667-2.869,
            3.884-7.588a42.34,42.34,0,0,1,4.041-4.834,9.154,9.154,0,1,1,15.269.074,42.163,42.163,0,0,1,3.97,4.76,27.321,27.321,0,0,1,3.942,7.588S51.429,48.686,48.6,
            49.318ZM35.031,18.028a6.313,6.313,0,1,0,6.316,6.313A6.314,6.314,0,0,0,35.031,18.028Zm8.451,18.292a16.4,16.4,0,0,0-3.9-4.036,9.167,9.167,0,0,1-9.166-.038,
            16.384,16.384,0,0,0-3.955,4.075A16.177,16.177,0,0,0,23.7,43.84a33.336,33.336,0,0,0,22.551.021A16.174,16.174,0,0,0,43.482,36.319Z</Geometry>
        <Geometry x:Key="ChangePathData">M499.462,233.421c-113.218,0-209.487,74.51-244.916,178.405l77.738-52.139L362.9,405.479l-115.849,77.7,0.043,0.064-45.854,
            30.748L93.007,352.119l45.854-30.748,54.383,81.339c41.567-128.027,162.932-220.7,306.218-220.7,156.35,0,286.618,110.334,315.569,256.549H751.986C724.981,
            320.952,622.176,233.421,499.462,233.421Zm0,533.158c115.861,0,213.962-78.033,247.287-185.73l-79.033,53.007-30.611-45.792,
            115.849-77.7-0.043-.064,45.854-30.748L906.993,641.424l-45.854,30.748-53.728-80.359C767.565,722.667,644.785,817.991,
            499.462,817.991c-158.647,0-290.45-113.6-316.787-263.016h62.862C270.2,675.825,374.51,766.579,499.462,766.579Z</Geometry>
        <Geometry x:Key="ReducePathData">M50.357,35.308L63.631,48.631l-2.914,2.925-16.142-16.2,0.02-.02-0.052-.052L60.711,19.109l2.919,
            2.92ZM44.544,48.63L41.63,51.555l-16.142-16.2,0.02-.02-0.052-.052L41.625,19.108l2.919,2.92L31.27,35.307Zm-19.087-.662-2.915,
            2.925L6.4,34.691l0.02-.02L6.369,34.62,22.538,18.445l2.919,2.92L12.183,34.645Z</Geometry>
        <Geometry x:Key="SettingsPathData">M59.534,34.913l-0.019,0-0.595,5.54L52.853,39.8a18.358,18.358,0,0,1-1.659,4.112L56.021,47.7l-3.5,
            4.465,0,0.005-0.024.02-0.023.029-0.007-.005-4.416,3.56L44.227,51.02a18.383,18.383,0,0,1-4.175,1.764l0.736,6.059-5.531.672,0,
            0.019-0.083-.009-0.083.01,0-.019-5.54-.595L30.2,52.854a18.367,18.367,0,0,1-4.161-1.687l-3.8,4.854-4.52-3.541,0.04-.051-3.525-4.372,
            4.752-3.831a18.385,18.385,0,0,1-1.764-4.176l-6.059.736-0.672-5.531-0.019,0,0.009-.083-0.01-.083,0.019,0,0.595-5.54L17.147,30.2A18.36,
            18.36,0,0,1,18.9,25.912l-4.785-3.749,3.374-4.306-0.02-.025,0.106-.086,0.081-.1,0.024,0.019,4.259-3.433,3.831,4.752a18.381,18.381,0,0,1,
            4.175-1.764l-0.736-6.059,5.531-.672,0-.019,0.083,0.009,0.083-.01,0,0.019,5.54,0.595L39.8,17.146a18.366,18.366,0,0,1,4.237,1.73l3.727-4.757,
            4.342,3.4,0.059-.048,3.6,4.47L51.02,25.773a18.385,18.385,0,0,1,1.764,4.176l6.059-.736,0.672,5.531,0.019,0-0.009.083ZM35,20.979A14.021,14.021,
            0,1,0,49.021,35,14.021,14.021,0,0,0,35,20.979Zm0,21.28A7.259,7.259,0,1,1,42.259,35,7.259,7.259,0,0,1,35,42.259Z</Geometry>
        <Geometry x:Key="ProductPathData">M66.775,65.445H3.226V33.685H19.113V4.625H50.888v29.06H66.775V65.445Zm-60.789-29V62.686H32.241V36.444H31.426L28.1,
            49.563H10.2L6.876,36.444H5.986Zm6.536,10.772H25.78l2.729-10.772H9.794ZM25.681,7.384l2.729,10.772H41.667L44.4,7.384H25.681Zm22.447,
            0H47.313L43.99,20.5h-17.9L22.763,7.384h-0.89V33.626H48.128V7.384Zm-6.56,29.06L44.3,47.216H57.554l2.728-10.772H41.568Zm22.447,
            0H63.2L59.877,49.563h-17.9L38.651,36.444H37.76V62.686H64.015V36.444Zm-20.169,25.5H39.1v-1.91h4.742v1.91Zm18.9,
            0H44.7v-1.91H62.741v1.91ZM42.3,57.091H60.349V59H42.3v-1.91ZM27.959,32.884H23.218v-1.91h4.741v1.91Zm18.9,
            0H28.808v-1.91H46.854v1.91ZM26.416,28.03H44.461v1.91H26.416V28.03ZM12.072,61.945H7.331v-1.91h4.741v1.91Zm18.9,
            0H12.921v-1.91H30.967v1.91ZM10.528,57.091H28.574V59H10.528v-1.91Z</Geometry>
        <Geometry x:Key="AddProductPathData">M47.608,39.348V60.176H9.85V22.418H29.939A15.338,15.338,0,1,1,47.608,39.348ZM13.129,
            25.7V56.9h31.2V39.518a15.274,15.274,0,0,1-4.254-.845l-0.664,2.622H18.136L14.187,25.7H13.129ZM20.9,38.5H36.651l0.336-1.328A15.333,
            15.333,0,0,1,29.907,25.7H17.654Zm24.275-27.26A12.959,12.959,0,1,0,58.131,24.2,12.959,12.959,0,0,0,45.172,11.245Zm1.646,
            14.584v7.735H43.533V25.829H35.8V22.544h7.735V14.81h3.285v7.735h7.735v3.285H46.818ZM20.361,56.015H14.727v-2.27h5.634v2.27Zm22.453,
            0H21.371v-2.27H42.815v2.27ZM18.527,50.244H39.971v2.271H18.527V50.244Z</Geometry>
        <Geometry x:Key="UserPathData">M63.57,48.868a63.368,63.368,0,0,1-10.408,1.044c-0.46,0-.966-0.013-1.5-0.035-0.287,1.377-.87,
            2.546-1.995,2.8A89.394,89.394,0,0,1,35,54.144a89.394,89.394,0,0,1-14.667-1.47c-1.125-.251-1.708-1.421-2-2.8-0.535.023-1.041,
            0.035-1.5,0.035A63.366,63.366,0,0,1,6.429,48.867c-2.169-.485-1.5-5.78-1.5-5.78A19.736,19.736,0,0,1,7.9,37.272,32.445,32.445,
            0,0,1,11,33.568a7.008,7.008,0,1,1,11.688.057c0.313,0.327.643,0.686,0.972,1.058,0.963-1.208,2.106-2.5,3.113-3.545a9.876,
            9.876,0,1,1,16.472.08c0.991,1.033,2.1,2.3,3.045,3.476,0.351-.4.7-0.78,1.035-1.124a7.008,7.008,0,1,1,11.688.057,32.3,32.3,0,0,
            1,3.039,3.648,20.947,20.947,0,0,1,3.017,5.815S65.739,48.384,63.57,48.868ZM10.3,38.905a12.406,12.406,0,0,0-2.116,5.764c2.978,
            1.957,9.917,1.483,9.917,1.483l0.121-1.614a26.367,26.367,0,0,1,3.662-7.393,12.432,12.432,0,0,0-1.54-1.332,7.01,7.01,0,0,
            1-7.017-.03A12.552,12.552,0,0,0,10.3,38.905ZM16.86,24.888a4.838,4.838,0,1,0,4.835,4.838A4.836,4.836,0,0,0,16.86,
            24.888Zm18.173-5.97a6.811,6.811,0,1,0,6.814,6.811A6.812,6.812,0,0,0,35.033,18.918ZM39.942,34.3a9.889,9.889,0,0,
            1-9.889-.042,17.675,17.675,0,0,0-4.266,4.4,17.452,17.452,0,0,0-2.981,8.113A34.928,34.928,0,0,0,35,48.895a34.949,
            34.949,0,0,0,12.134-2.108,17.45,17.45,0,0,0-2.984-8.136A17.688,17.688,0,0,0,39.942,34.3Zm13.244-9.407a4.838,4.838,0,1,
            0,4.835,4.838A4.836,4.836,0,0,0,53.186,24.889Zm6.469,14.017a12.561,12.561,0,0,0-2.986-3.093,7.01,7.01,0,0,1-7.017-.029,
            12.413,12.413,0,0,0-1.592,1.371,28,28,0,0,1,3.717,7.383L51.9,46.152s3.885,0.754,9.873-1.467A12.4,12.4,0,0,0,59.655,38.907Z</Geometry>
        <Geometry x:Key="AccountPathData">M52.356,38.984L50.57,37.2l-1.786,1.785L47,37.2l-1.787,1.786L43.323,37.1l-1.886,1.884L39.652,
            37.2l-1.786,1.785L36.078,37.2l-1.787,1.786L32.335,37.03h-0.6a10.289,10.289,0,1,1-.295-5.19H52.356l3.575,3.572ZM21.638,
            29.55A5.451,5.451,0,1,0,27.092,35,5.452,5.452,0,0,0,21.638,29.55Z</Geometry>
        <Geometry x:Key="ExitPathData">M810,737.709L737.709,810,500,572.286,262.291,810l-72.286-72.286L427.714,500,190.005,
            262.291l72.286-72.286L500,427.714,737.709,190.005,810,262.291,572.286,500Z</Geometry>
        <Geometry x:Key="HidePathData">M795.5,761.5h-591v-78h591v78Z</Geometry>
        <Geometry x:Key="ExpandPathData">M19.643,35.308L6.369,48.631l2.914,2.925,16.142-16.2-0.02-.02,0.052-.052L9.289,
            19.109l-2.919,2.92ZM25.456,48.63l2.915,2.925,16.142-16.2-0.02-.02,0.052-.052L28.375,19.108l-2.919,2.92L38.73,
            35.307Zm19.087-.662,2.914,2.925L63.6,34.691l-0.02-.02,0.052-.052L47.462,18.445l-2.919,2.92L57.817,34.645Z</Geometry>
        <Geometry x:Key="FullScreenPathData">M231,769V231H769V769H231ZM735.077,264.923H264.923V735.077H735.077V264.923Z</Geometry>
        <Geometry x:Key="CollapsePathData">M725.75,664.918v64.8l-523.385.321v-0.321h-0.007V335.085h71.873v-65.12H797.624V664.6ZM237.283,
            369.866v325.39H690.825V369.866H237.283ZM762.7,304.746H309.157v30.339H725.75V630.136H762.7V304.746Z</Geometry>
        <Geometry x:Key="SupplyPathData">M488.5,319A11.5,11.5,0,0,1,500,330.5v369a11.5,11.5,0,0,1-23,0v-369A11.5,11.5,0,0,1,
            488.5,319Zm370.063,0a11.5,11.5,0,0,1,11.5,11.5v369a11.5,11.5,0,0,1-23,0v-369A11.5,11.5,0,0,1,858.563,319ZM869,
            330.5A11.5,11.5,0,0,1,857.5,342h-369a11.5,11.5,0,0,1,0-23h369A11.5,11.5,0,0,1,869,330.5Zm1,369A11.5,11.5,0,0,1,
            858.5,711h-369a11.5,11.5,0,0,1,0-23h369A11.5,11.5,0,0,1,870,699.5ZM316.422,383H467.5a10.5,10.5,0,0,1,0,
            21.006H316.422A10.5,10.5,0,0,1,316.422,383ZM221.038,558.052l79.916-168.944a10.67,10.67,0,0,1,14.193-5.08l3.746,
            1.765a10.634,10.634,0,0,1,5.089,14.167L244.067,568.9a10.671,10.671,0,0,1-14.194,5.08l-3.745-1.766A10.632,10.632,
            0,0,1,221.038,558.052ZM478,393.588V581.412a10.592,10.592,0,0,1-21.183,0V393.588A10.592,10.592,0,0,1,478,
            393.588ZM239.738,570.148v123.7a10.15,10.15,0,0,1-20.3,0v-123.7A10.15,10.15,0,0,1,239.738,570.148ZM478,
            562.589V692.411a10.592,10.592,0,0,1-21.183,0V562.589A10.592,10.592,0,0,1,478,562.589ZM232.44,552H464.119a13,
            13,0,1,1,0,26H232.44A13,13,0,1,1,232.44,552Zm-1.006,135.007H466.007a12,12,0,1,1,0,23.993H231.434A12,12,0,1,1,
            231.434,687.006ZM607.2,474.119l67.475,116.438a11.955,11.955,0,0,1-4.4,16.365l-7.758,4.462A12.047,12.047,0,0,1,
            646.088,607L578.613,490.561a11.955,11.955,0,0,1,4.4-16.365l7.758-4.462A12.048,12.048,0,0,1,607.2,474.119Zm162.218-35.687L671.9,
            606.715a12.049,12.049,0,0,1-16.426,4.386l-7.765-4.467a11.955,11.955,0,0,1-4.4-16.365l97.517-168.283a12.048,12.048,0,0,1,
            16.425-4.386l7.765,4.467A11.956,11.956,0,0,1,769.414,438.432Z</Geometry>
        <Geometry x:Key="MinusPathData">M0,5 H10</Geometry>
        <Geometry x:Key="PlusPathData">M0,5 H10 M5,5 V10Z</Geometry>
        <Geometry x:Key="DevidePathData">M444.869,572.094q81.758,0,130.2-45.251,48.414-45.252,48.426-130.2a234.9,234.9,0,0,
            0-9.526-67.082A153.417,153.417,0,0,0,583.4,272.8q-21.043-24.6-55.174-39.3-34.143-14.68-83.358-14.687h-116.7a37.948,
            37.948,0,0,0-38.106,38.106V753.1a32.674,32.674,0,0,0,9.526,23.419q9.526,9.918,22.229,9.924a29.529,29.529,0,0,0,
            22.625-9.924,33.46,33.46,0,0,0,9.13-23.419v-181h91.3Zm-91.3-291.354h91.3q34.924,0,57.557,9.923t35.327,26.2a93.507,
            93.507,0,0,1,17.466,36.916,186.6,186.6,0,0,1,4.763,42.076q0,58.76-28.977,86.533-28.989,27.8-86.136,
            27.785h-91.3V280.74Zm183.4,503.089h73.657c60.606,0,99.288-44.738,99.288-106.482h0c0-62.257-39.688-102.245-98.351-102.245H536.976V783.829ZM564.65,
            598.6h43.9c51.083,0,72.39,38.12,72.39,79.327h0c0,47.226-23.37,82.4-72.5,82.4h-43.8V598.6Z</Geometry>
        <Geometry x:Key="DevideTextPathData">M633.881,840.843H544.759V588.219h90.257c70.98,0,119,48.4,119,123.748C754.018,
            786.7,707.214,840.843,633.881,840.843ZM631.363,616.66H578.244V812.4h52.991c59.441,0,87.717-42.574,87.717-99.732C718.952,
            662.8,693.172,616.66,631.363,616.66Zm-40.517-86.849q-58.6,54.768-157.534,54.768H322.846V803.65A40.507,40.507,0,0,1,311.8,
            832a35.726,35.726,0,0,1-27.376,12.01q-15.376,0-26.9-12.01A39.553,39.553,0,0,1,246,803.65V203.126a45.921,45.921,0,0,1,
            46.108-46.12h141.2q59.548,0,100.861,17.775,41.289,17.791,66.759,47.562a185.687,185.687,0,0,1,36.983,68.7,284.406,284.406,
            0,0,1,11.527,81.191Q649.442,475.058,590.846,529.811ZM566.832,320.348A113.171,113.171,0,0,0,
            545.7,275.669q-15.376-19.681-42.745-31.707-27.377-12-69.642-12.011H322.846V509.633H433.312q69.162,0,104.223-33.629T572.6,
            371.273A225.886,225.886,0,0,0,566.832,320.348Z</Geometry>
        <Geometry x:Key="DatePickerPathData">M335.999,53.999 L27.0,53.999 C12.88,53.999 0.0,41.911 0.0,27.0 C0.0,25.289 0.177,
            23.622 0.481,22.0 L138.446,22.0 C146.23,22.0 152.479,12.836 154.938,0.0 L335.999,0.0 C350.911,0.0 362.999,12.88 362.999,
            27.0 C362.999,41.911 350.911,53.999 335.999,53.999 ZM21.302,82.751 L104.238,82.751 C109.964,82.751 114.605,87.395 114.605,
            93.123 L114.605,176.98 C114.605,181.826 109.964,186.469 104.238,186.469 L21.302,186.469 C15.577,186.469 10.936,
            181.826 10.936,176.98 L10.936,93.123 C10.936,87.395 15.577,82.751 21.302,82.751 ZM21.311,200.300 L104.246,
            200.245 C109.972,200.241 114.616,204.882 114.620,210.610 L114.675,293.584 C114.679,299.313 110.41,303.959 104.315,
            303.963 L21.380,304.18 C15.654,304.22 11.9,299.381 11.6,293.653 L10.951,210.679 C10.947,204.951 15.585,200.304 21.311,
            200.300 ZM21.345,318.292 L104.281,318.292 C110.6,318.292 114.648,322.936 114.648,328.664 L114.648,411.638 C114.648,
            417.367 110.6,422.10 104.281,422.10 L21.345,422.10 C15.620,422.10 10.978,417.367 10.978,411.638 L10.978,
            328.664 C10.978,322.936 15.620,318.292 21.345,318.292 ZM140.503,83.7 L223.438,83.7 C229.164,83.7 233.805,87.651 233.805,
            93.379 L233.805,176.353 C233.805,182.82 229.164,186.725 223.438,186.725 L140.503,186.725 C134.777,186.725 130.136,
            182.82 130.136,176.353 L130.136,93.379 C130.136,87.651 134.777,83.7 140.503,83.7 ZM140.511,200.556 L223.447,
            200.501 C229.172,200.497 233.817,205.138 233.820,210.866 L233.875,293.840 C233.879,299.568 229.241,304.215 223.515,
            304.219 L140.580,304.274 C134.854,304.278 130.210,299.637 130.206,293.909 L130.151,210.935 C130.147,205.206 134.785,
            200.560 140.511,200.556 ZM140.545,318.548 L223.481,318.548 C229.206,318.548 233.848,323.192 233.848,328.920 L233.848,
            411.894 C233.848,417.622 229.206,422.266 223.481,422.266 L140.545,422.266 C134.820,422.266 130.178,417.622 130.178,
            411.894 L130.178,328.920 C130.178,323.192 134.820,318.548 140.545,318.548 ZM259.703,83.7 L342.638,83.7 C348.364,
            83.7 353.5,87.651 353.5,93.379 L353.5,176.353 C353.5,182.82 348.364,186.725 342.638,186.725 L259.703,186.725 C253.977,
            186.725 249.336,182.82 249.336,176.353 L249.336,93.379 C249.336,87.651 253.977,83.7 259.703,83.7 ZM259.711,
            200.556 L342.647,200.501 C348.372,200.497 353.17,205.138 353.21,210.866 L353.76,293.840 C353.79,299.568 348.441,
            304.215 342.715,304.219 L259.780,304.274 C254.54,304.278 249.410,299.637 249.406,293.909 L249.351,210.935 C249.347,
            205.206 253.986,200.560 259.711,200.556 ZM259.745,318.548 L342.681,318.548 C348.407,318.548 353.48,323.192 353.48,
            328.920 L353.48,411.894 C353.48,417.622 348.407,422.266 342.681,422.266 L259.745,422.266 C254.20,422.266 249.378,
            417.622 249.378,411.894 L249.378,328.920 C249.378,323.192 254.20,318.548 259.745,318.548 Z</Geometry>
        <Geometry x:Key="DatePicker1PathData">M300,250H700a50,50,0,0,1,50,50V700a50,50,0,0,1-50,50H300a50,50,0,0,1-50-50V300A50,
            50,0,0,1,300,250Zm22.21,19.532H677.79c24.547,0,44.447,20.637,44.447,46.094V684.374c0,25.457-19.9,46.094-44.447,
            46.094H322.21c-24.547,0-44.447-20.637-44.447-46.094V315.626C277.763,290.169,297.663,269.532,322.21,269.532Zm328.507,
            77.72H350.283A26.177,26.177,0,0,1,324.5,316.147H458.64c7.367,0,13.644-8.907,16.035-21.385H650.717A26.245,26.245,0,1,
            1,650.717,347.252ZM344.744,375.2h80.637a10.08,10.08,0,0,1,10.079,10.081v80.654a10.081,10.081,0,0,1-10.079,
            10.082H344.744a10.081,10.081,0,0,1-10.079-10.082V385.281A10.08,10.08,0,0,1,344.744,375.2Zm0.008,114.261,
            80.637-.054a10.082,10.082,0,0,1,10.086,10.075l0.053,80.654a10.081,10.081,0,0,1-10.072,10.089l-80.637.053A10.08,
            10.08,0,0,1,334.733,580.2l-0.053-80.654A10.08,10.08,0,0,1,344.752,489.461Zm0.034,114.692h80.636a10.081,10.081,
            0,0,1,10.08,10.082v80.653a10.081,10.081,0,0,1-10.08,10.082H344.786a10.081,10.081,0,0,1-10.08-10.082V614.235A10.081,
            10.081,0,0,1,344.786,604.153ZM460.64,375.448h80.636a10.081,10.081,0,0,1,10.08,10.082v80.654a10.081,10.081,0,0,
            1-10.08,10.082H460.64a10.081,10.081,0,0,1-10.08-10.082V385.53A10.081,10.081,0,0,1,460.64,375.448Zm0.008,114.262,
            80.636-.054a10.08,10.08,0,0,1,10.086,10.075l0.054,80.654a10.08,10.08,0,0,1-10.073,10.088l-80.636.054a10.081,
            10.081,0,0,1-10.087-10.075L450.575,499.8A10.08,10.08,0,0,1,460.648,489.71ZM460.681,604.4h80.637A10.08,10.08,0,
            0,1,551.4,614.483v80.654a10.081,10.081,0,0,1-10.079,10.082H460.681A10.08,10.08,0,0,1,450.6,695.137V614.483A10.079,
            10.079,0,0,1,460.681,604.4ZM576.535,375.448h80.636a10.081,10.081,0,0,1,10.08,10.082v80.654a10.081,10.081,0,0,
            1-10.08,10.082H576.535a10.08,10.08,0,0,1-10.079-10.082V385.53A10.08,10.08,0,0,1,576.535,375.448Zm0.008,114.262,
            80.637-.054a10.081,10.081,0,0,1,10.086,10.075l0.053,80.654a10.08,10.08,0,0,1-10.073,10.088l-80.636.054a10.08,
            10.08,0,0,1-10.086-10.075L566.47,499.8A10.08,10.08,0,0,1,576.543,489.71ZM576.577,604.4h80.636a10.079,10.079,0,
            0,1,10.079,10.081v80.654a10.08,10.08,0,0,1-10.079,10.082H576.577a10.081,10.081,0,0,1-10.08-10.082V614.483A10.08,
            10.08,0,0,1,576.577,604.4Z</Geometry>

        <Geometry x:Key="InfoPathData">M500,381.091a31.2,31.2,0,1,1,31.014-31.2A31.109,31.109,0,0,1,500,381.091Zm-10.338,
            22.881h20.676a10.37,10.37,0,0,1,10.338,10.4V670.924a10.37,10.37,0,0,1-10.338,10.4H489.662a10.37,10.37,0,0,
            1-10.338-10.4V414.373A10.37,10.37,0,0,1,489.662,403.972ZM500,777.5c-153.259,0-277.5-124.241-277.5-277.5S346.741,
            222.5,500,222.5,777.5,346.741,777.5,500,653.259,777.5,500,777.5Zm0-529.668c-139.269,0-252.168,112.9-252.168,
            252.168S360.731,752.168,500,752.168,752.168,639.269,752.168,500,639.269,247.832,500,247.832Z</Geometry>
        <Geometry x:Key="ChangedPathData">M716.125,728H283.873A11.875,11.875,0,0,1,272,716.125V283.873A11.874,11.874,0,0,1,283.873,
            272H438.248a11.875,11.875,0,0,1,11.876,11.875v5.937a11.875,11.875,0,0,1-11.876,11.875H301.685V698.312H698.312V561.749a11.875,
            11.875,0,0,1,11.875-11.875h5.938A11.875,11.875,0,0,1,728,561.749V716.125A11.875,11.875,0,0,1,716.125,
            728Zm6.119-363.766L475.711,610.767l-0.068.068-1.083,1.083a8.552,8.552,0,0,1-7.523,2.379l-0.74.116-84.626,
            13.21-3.744.585c-4.136.645-6.965-2.192-6.318-6.337l0.586-3.753,13.41-85.9a8.588,8.588,0,0,1,.626-4.01l0.169-1.081,
            0.24,0.241a8.565,8.565,0,0,1,1.442-1.925L635.766,277.756l3.028-3.028a8.557,8.557,0,0,1,12.1-.009l3.024,3.024,68.336,
            68.336,3.024,3.024a8.558,8.558,0,0,1-.009,12.1ZM403.2,540.558A8.543,8.543,0,0,1,401.275,542l0.925,0.924L392.089,
            607.69l64.766-10.11L458,598.725a8.541,8.541,0,0,1,1.442-1.926L671.205,385.036,614.964,328.8ZM644.829,298.93l-18.164,
            18.164,56.241,56.241,18.164-18.164Z</Geometry>
        <Geometry x:Key="ControlMenuPathData">M706.751,671h-412.5A9.245,9.245,0,0,1,285,661.759v-23.1a9.245,9.245,0,0,1,
            9.249-9.241h412.5A9.245,9.245,0,0,1,716,638.656v23.1A9.245,9.245,0,0,1,706.751,671Zm0-149.707h-412.5A9.246,
            9.246,0,0,1,285,512.051v-23.1a9.246,9.246,0,0,1,9.249-9.242h412.5A9.246,9.246,0,0,1,716,488.949v23.1A9.246,
            9.246,0,0,1,706.751,521.293Zm0-149.708h-412.5A9.245,9.245,0,0,1,285,362.344v-23.1A9.245,9.245,0,0,1,294.249,
            330h412.5A9.245,9.245,0,0,1,716,339.241v23.1A9.245,9.245,0,0,1,706.751,371.585Z</Geometry>
        <Geometry x:Key="AddPathData">M500.5,752C361.6,752,249,639.4,249,500.5S361.6,249,500.5,249,752,361.6,752,500.5,
            639.4,752,500.5,752Zm0-480.042c-126.22,0-228.542,102.322-228.542,228.542S374.28,729.042,500.5,729.042,
            729.042,626.72,729.042,500.5,626.72,271.958,500.5,271.958ZM611.184,520.175H519.747v91.437a19.247,19.247,
            0,1,1-38.494,0V520.175H389.816a19.248,19.248,0,1,1,0-38.495h91.437V390.243a19.247,19.247,0,1,1,38.494,
            0V481.68h91.437A19.248,19.248,0,1,1,611.184,520.175Z</Geometry>
        <Geometry x:Key="DeactivatePathData">M500,752c-139.176,0-252-112.824-252-252S360.824,248,500,248,752,360.824,
            752,500,639.176,752,500,752Zm0-481c-126.471,0-229,102.525-229,229S373.529,729,500,729,729,626.471,729,
            500,626.471,271,500,271Zm92.126,321.55a19.333,19.333,0,0,1-27.342-.067L500,527.7l-64.784,64.784a19.286,
            19.286,0,1,1-27.274-27.274l64.784-64.784-64.784-64.785a19.286,19.286,0,1,1,27.274-27.274L500,
            473.154l64.784-64.784a19.286,19.286,0,1,1,27.274,27.274l-64.784,64.785,64.784,64.784A19.333,
            19.333,0,0,1,592.126,592.554Z</Geometry>
        <!--#endregion-->
        <!--#region  brush-->

        <SolidColorBrush x:Key="Button.Changed.Background" Color="#339933"/>
        <SolidColorBrush x:Key="Button.Add.Background" Color="#999999"/>
        <SolidColorBrush x:Key="Button.Delete.Background" Color="#FF3366"/>
        <SolidColorBrush x:Key="Button.All.Background" Color="#333333"/>
        
        
        <SolidColorBrush x:Key="ToggleButton.All.Background" Color="White"/>
        <SolidColorBrush x:Key="ToggleButton.IsMouseOver.Background" Color="#CCCCCC"/>

        <SolidColorBrush x:Key="Chart.Delivery.Background" Color="#CCCCCC"/>
        <SolidColorBrush x:Key="Chart.Remainder.Background" Color="#00CCFF"/>
        <SolidColorBrush x:Key="Chart.Selling.Background" Color="#00FF00"/>
        <SolidColorBrush x:Key="Chart.WriteOff.Background" Color="#FF3366"/>
        <SolidColorBrush x:Key="Chart.Background" Color="#F2EFF1"/>
        <SolidColorBrush x:Key="Chart.Header.Background" Color="#CCCCCC"/>

        <SolidColorBrush x:Key="Window.NavigationBar.Background" Color="#3B3839"/>
        <SolidColorBrush x:Key="Window.NavigationBar.Border" Color="#767676"/>
        <SolidColorBrush x:Key="Window.NavigationBar.Background2" Color="#828581"/>
        <SolidColorBrush x:Key="Window.NavigationBar.Background3" Color="#9E9FA3"/>
        <SolidColorBrush x:Key="Window.NavigationBar.Foreground" Color="#F2EFF1"/>
        <SolidColorBrush x:Key="Frame.Static.Background" Color="#F2EFF1"/>

        <SolidColorBrush x:Key="ListViewItem.Static.Background" Color="#F2EFF1"/>
        <SolidColorBrush x:Key="ListViewItem.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="ListViewItem.Static.Foreground" Color="Black"/>
        <SolidColorBrush x:Key="ListViewItem.MouseOver.Background" Color="#9E9FA3"/>
        <SolidColorBrush x:Key="ListViewItem.MouseOver.Border" Color="Black"/>
        <SolidColorBrush x:Key="ListViewItem.Pressed.Background" Color="LightGreen"/>

        <SolidColorBrush x:Key="ComboBoxItem.Static.Background" Color="#F2EFF1"/>
        <SolidColorBrush x:Key="ComboBoxItem.MouseOver.Background" Color="#9E9FA3"/>

        <SolidColorBrush x:Key="ComboBox.Static.Background" Color="#F2EFF1"/>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#3B3839"/>

        <SolidColorBrush x:Key="DatePicker.Static.Background" Color="#F2EFF1"/>
        <SolidColorBrush x:Key="DatePicker.Static.Border" Color="#9E9FA3"/>

        <SolidColorBrush x:Key="DatePickerButton.Static.Background" Color="#3B3839"/>
        <SolidColorBrush x:Key="DatePickerButton.Static.Border" Color="#9E9FA3"/>

        <SolidColorBrush x:Key="ToggleButton.Static.Background" Color="#9E9FA3"/>

        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#F2EFF1"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#9E9FA3"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="Black"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#F2EFF1"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#3B3839"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="Black"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>

        <SolidColorBrush x:Key="Button.Static.Background" Color="#FF9A9A9A"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.Static.Foreground" Color="Black"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#3B3839"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="Black"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF0CA500"/>
        <SolidColorBrush x:Key="TextBlock.Static.Foreground" Color="Gray"/>

        <!--#endregion-->
        <Style TargetType="{x:Type Calendar}" x:Key="CalendarSizeStyle">
            <Setter Property="FontSize" Value="28" ></Setter>
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="Foreground" Value="#FF333333"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Calendar}">
                        <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
                            <CalendarItem x:Name="PART_CalendarItem" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Style="{TemplateBinding CalendarItemStyle}"/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF2384E4" Offset="0"/>
                        <GradientStop Color="#FF28C12A" Offset="0.16"/>
                        <GradientStop Color="#FFAF0F9A" Offset="0.16"/>
                        <GradientStop Color="#FFC4C53B" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFA3AEB9" Offset="0"/>
                        <GradientStop Color="#FF8399A9" Offset="0.375"/>
                        <GradientStop Color="#FFD23CDA" Offset="0.375"/>
                        <GradientStop Color="#FF617584" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="CalendarDayButtonStyle">
                <Setter.Value>
                    <Style TargetType="CalendarDayButton">
                        <Setter Property="FontSize" Value="20" ></Setter>
                        <Setter Property="Width" Value="50"></Setter>
                        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
                        <Setter Property="VerticalAlignment" Value="Center"></Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="CalendarItemStyle">
                <Setter.Value>
                    <Style TargetType="CalendarItem">
                        <Setter Property="Width" Value="50"></Setter>
                        <Setter Property="Height" Value="60"></Setter>
                        <Setter Property="FontSize" Value="20" ></Setter>
                        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
                        <Setter Property="VerticalAlignment" Value="Center"></Setter>
                        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="CalendarButtonStyle">
                <Setter.Value>
                    <Style TargetType="CalendarButton">
                        <Setter Property="FontSize" Value="28" ></Setter>
                        <Setter Property="Height" Value="60"></Setter>
                        <Setter Property="Width" Value="60"></Setter>
                        <Setter Property="Margin" Value="10"></Setter>
                        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
                        <Setter Property="VerticalAlignment" Value="Center"></Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="CalendarItemStyle">
                <Setter.Value>
                    <Style TargetType="CalendarItem">
                        <Setter Property="FontSize" Value="20" ></Setter>
                        <Setter Property="Width" Value="auto"></Setter>
                        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
                        <Setter Property="VerticalAlignment" Value="Center"></Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DatePicker}" x:Key="DatePickerBaseStyle">
            <Setter Property="Foreground" Value="#FF333333"/>
            <Setter Property="IsTodayHighlighted" Value="True"/>
            <Setter Property="SelectedDateFormat" Value="Short"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="CalendarStyle" Value="{StaticResource CalendarSizeStyle}"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="MinWidth" Value="60"></Setter>
            <Setter Property="MinHeight" Value="30"></Setter>
            <Setter Property="Padding" Value="0"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DatePicker}">
                        <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                  MinWidth="{TemplateBinding MinWidth}" Width="{TemplateBinding Width}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="{TemplateBinding Height}"/>
                            </Grid.ColumnDefinitions>
                            <Border Grid.ColumnSpan="2" CornerRadius="5" Background="White" 
                                    BorderBrush="{StaticResource DatePickerButton.Static.Border}"
                                    BorderThickness="{TemplateBinding BorderThickness}" Width="{TemplateBinding Width}"/>
                            <Button x:Name="PART_Button" Grid.Column="1" Focusable="False" HorizontalAlignment="Right" 
                                    Width="{TemplateBinding Height}" Height="{TemplateBinding Height}">
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid>
                                            <Border CornerRadius="0 5 5 0" Background="{StaticResource DatePicker.Static.Border}" 
                                                    BorderBrush="{StaticResource ComboBox.Static.Border}"
                                                    BorderThickness="1" Name="Border"/>
                                            <Path x:Name="Arrow"  Grid.Column="1" Fill="White" Stretch="Fill" Margin="5"
                                                  HorizontalAlignment="Center" VerticalAlignment="Center"  Data="{StaticResource DatePickerPathData}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                                <Setter TargetName="Border" Property="Background" Value="#808080" />
                                            </Trigger>
                                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                                                <Setter Property="Foreground" Value="#888888"/>
                                                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                            <DatePickerTextBox Background="{x:Null}" BorderBrush="{x:Null}" Grid.ColumnSpan="2" 
                                               x:Name="PART_TextBox" Margin="3 0 30 0"
                                               Focusable="{TemplateBinding Focusable}" HorizontalAlignment="Center"
                                               VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                               HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            <Grid x:Name="PART_DisabledVisual" IsHitTestVisible="False">
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_TextBox}"
                                       StaysOpen="False" PopupAnimation ="Fade"/>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="false">
                                <Setter Property="Foreground" TargetName="PART_TextBox" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="PasswordBox" x:Key="AuthorizationPasswordBoxStyle">
            <Setter Property="PasswordChar" Value="●"/>
            <Setter Property="Width" Value="300"/>
            <Setter Property="Background" Value="Black"/>
            <Setter Property="SelectionBrush" Value="Black"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>

                            <Border VerticalAlignment="Bottom" Background="{TemplateBinding BorderBrush}" Name="border1" Height="1"></Border>
                            <Border VerticalAlignment="Bottom" Background="{TemplateBinding Background}" Height="1" Name="border" Width="{TemplateBinding Width}">
                                <Border.LayoutTransform>
                                    <ScaleTransform ScaleX="0"></ScaleTransform>
                                </Border.LayoutTransform>
                            </Border>
                            <Border VerticalAlignment="Bottom" Background="{TemplateBinding SelectionBrush}" Visibility="Hidden" Name="border2" Height="1" ></Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">

                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                    <Condition Property="IsFocused" Value="false"/>

                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard TargetName="border" TargetProperty="LayoutTransform.ScaleX">
                                            <DoubleAnimation  To="1" From="0" Duration="0:00:0.3"></DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard TargetName="border" TargetProperty="LayoutTransform.ScaleX">
                                            <DoubleAnimation To="0" From="1" Duration="0:00:0.3"></DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="border2" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="PasswordBox" x:Key="BasePasswordBoxStyle">
            <Setter Property="PasswordChar" Value="●"/>
            <Setter Property="SelectionBrush" Value="Black"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" CornerRadius="5">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Path" x:Key="NavigationPath">
            <Setter Property="Width" Value="30" />
            <Setter Property="Height" Value="30" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="10 0 15 0" />
            <Setter Property="Stretch" Value="Uniform"></Setter>
            <Setter Property="Fill" Value="#FFAB2929"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Fill" Value="#FF3E3D3D"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonFocusVisual" >
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="NavigationStyle">
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="Foreground" Value="{StaticResource Button.Static.Foreground}"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Height" Value="45"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="FocusVisualStyle"
                    Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="5" Background="{TemplateBinding Background}" x:Name="ColorBackground">
                            <Grid>
                                <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" 
                                                  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Background" TargetName="ColorBackground" Value="#FF5A5A5A"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="Background" TargetName="ColorBackground" Value="{StaticResource Button.Pressed.Background}"/>
                            </Trigger>
                            <!--<Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="Background" TargetName="ColorBackground" Value="Green"/>
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TextBox}" x:Key="BaseTextBoxStyle">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Height" Value="40"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" CornerRadius="5">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                                <Setter Property="Cursor" Value="Cross"></Setter>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="my:NavigationButton" x:Key="StateNavigationButtonStyle">
            <Setter Property="Background" Value="{StaticResource Window.NavigationBar.Background}"></Setter>
            <Setter Property="BorderBrush" Value="{StaticResource Window.NavigationBar.Border}"></Setter>
            <Setter Property="Foreground" Value="{StaticResource Window.NavigationBar.Foreground}"></Setter>
            <Setter Property="Opacity" Value="1"></Setter>
            <Setter Property="Width" Value="58"></Setter>
            <Setter Property="Height" Value="36"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="0"></Setter>
            <Setter Property="Padding" Value="0"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type my:NavigationButton}">
                        <Border Name="border" Opacity="{TemplateBinding Opacity}"
                                Padding="{TemplateBinding Padding}" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Path Margin="0" Data="{TemplateBinding Data}" x:Name="path" Width="20"  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  Style="{StaticResource NavigationPath}" Fill="{TemplateBinding Foreground}"></Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF4C4C4C" />
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF707070" />
                                <Setter TargetName="path" Property="Fill" Value="#FF707070"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF484848" />
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF707070" />
                                <Setter TargetName="path" Property="Fill" Value="#FF707070" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="my:NavigationButton" x:Key="PanelNavigationButtonStyle">
            <Setter Property="Background" Value="{StaticResource Window.NavigationBar.Background}"></Setter>
            <Setter Property="BorderBrush" Value="{StaticResource Window.NavigationBar.Border}"></Setter>
            <Setter Property="Foreground" Value="{StaticResource Window.NavigationBar.Foreground}"></Setter>
            <Setter Property="Width" Value="50"></Setter>
            <Setter Property="Height" Value="35"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="0"></Setter>
            <Setter Property="Padding" Value="15 10 15 10"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type my:NavigationButton}">
                        <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Path Data="{TemplateBinding Data}" x:Name="path"  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  
                                   Fill="{TemplateBinding Foreground}" Stretch="Uniform" HorizontalAlignment="Center"></Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF4C4C4C" />
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF707070" />
                                <!--<Setter TargetName="path" Property="Fill" Value="#FF707070"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF484848" />
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF707070" />
                                <!--<Setter TargetName="path" Property="Fill" Value="#FF707070" />-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="my:NavigationButton" x:Key="PopupNavigationButton">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="{StaticResource Button.All.Background}"/>
            <Setter Property="FontFamily" Value="{StaticResource Blogger Sans}"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Margin" Value="1"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FocusVisualStyle"
                    Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type my:NavigationButton}">
                        <Border CornerRadius="5" Background="{TemplateBinding Background}" 
                                x:Name="ColorBackground" Margin="{TemplateBinding Margin}">
                            <StackPanel Orientation="Horizontal">
                                <Path Margin="5 5 10 5" Data="{TemplateBinding Data}" x:Name="path" Width="20"  
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  
                                      Style="{StaticResource NavigationPath}" Fill="{TemplateBinding Foreground}"></Path>
                                <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" 
                                                  HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0 5 5 5"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Background" TargetName="ColorBackground" Value="{StaticResource ToggleButton.IsMouseOver.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="Background" TargetName="ColorBackground" Value="{StaticResource Button.Pressed.Background}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate TargetType="my:NavigationButton" x:Key="ListViewButtonTemplate">
            <Grid>
                <Border Padding="{TemplateBinding Padding}" Opacity="0"
                    Background="{TemplateBinding Background}" 
                    Name="border" CornerRadius="5"
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}">
                </Border>
                <Path Margin="0" Opacity="1" Data="{TemplateBinding Data}" 
                      x:Name="path" Width="20" 
                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                      Style="{StaticResource NavigationPath}" 
                      Fill="{TemplateBinding Foreground}"></Path>
            </Grid>

            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="border" Property="Background" Value="#FF4C4C4C" />
                    <Setter TargetName="border" Property="BorderBrush" Value="#FF707070" />
                    <Setter TargetName="path" Property="Fill" Value="White"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="border" Property="Background" Value="#FF484848" />
                    <Setter TargetName="border" Property="BorderBrush" Value="#FF707070" />
                    <Setter TargetName="path" Property="Fill" Value="White" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ListViewFocusVisualStyle">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate >
                        <Border BorderThickness="1" CornerRadius="1" BorderBrush="#FFFF9900" Background="#3F000000"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="PanelButtonStyleStyle">
            <Setter Property="Background" Value="{StaticResource Frame.Static.Background}"/>
            <Setter Property="Foreground" Value="{StaticResource Button.Static.Foreground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListViewItem.MouseOver.Background}"/>
            <Setter Property="BorderThickness" Value="2 2 2 0"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Bahnschrift SemiLight"></Setter>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Height" Value="35"></Setter>
            <Setter Property="Width" Value="137"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="FocusVisualStyle"
                    Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="15 15 0 0" Background="{TemplateBinding Background}"  BorderBrush="{TemplateBinding BorderBrush}"
                                x:Name="ColorBackground" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Background" TargetName="ColorBackground" Value="#FF5A5A5A"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="Background" TargetName="ColorBackground" Value="{StaticResource Button.Pressed.Background}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ProductListViewStyle" TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="#CCCCCC"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListViewItem.MouseOver.Background}"/>
            <Setter Property="BorderThickness" Value="2 0 2 2"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="1 0 0 3"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible"/>

        </Style>
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="30"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="Border"  Grid.ColumnSpan="2" CornerRadius="5" 
                  Background="{StaticResource ToggleButton.Static.Background}"
                  BorderBrush="{StaticResource ComboBox.Static.Border}"
                  BorderThickness="1" />
                <Border  Grid.Column="0" CornerRadius="5 0 0 5"  
                  BorderBrush="{StaticResource ComboBox.Static.Border}"
                  BorderThickness="1" Background="White"/>
                <Path x:Name="Arrow" Grid.Column="1"     
                  Fill="{StaticResource ComboBox.Static.Border}" Stretch="Fill" Margin="10"
                  HorizontalAlignment="Center" VerticalAlignment="Center" 
                  Data="{StaticResource ExpandPathData}"
                />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#808080" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                    <Setter Property="Foreground" Value="#888888"/>
                    <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>
        <Style x:Key="ComboBoxBaseStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <Grid.Clip>
                                <RectangleGeometry RadiusX="5" RadiusY="5">
                                    <RectangleGeometry.Rect>
                                        <MultiBinding Converter="{StaticResource RectangleConverter}">
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource AncestorType={x:Type Grid}}" />
                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource AncestorType={x:Type Grid}}" />
                                        </MultiBinding>
                                    </RectangleGeometry.Rect>
                                </RectangleGeometry>
                            </Grid.Clip>
                            <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,33,3"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left"  VerticalAlignment="Center"  Margin="3,3,23,3" Focusable="True" 
                            Background="White" Foreground="Green" Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
                                <Grid Name="DropDown"  SnapsToDevicePixels="True"        
                                      MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border  x:Name="DropDownBorder"  BorderThickness="1" CornerRadius="5" Margin="10"
                                             Background="{StaticResource ComboBoxItem.Static.Background}" BorderBrush="{StaticResource ComboBox.Static.Border}" />
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True" Background="{x:Null}">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"></StackPanel>

                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="90"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="5"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border" Background="{StaticResource ComboBoxItem.Static.Background}"
                              Padding="2" CornerRadius="5"
                              SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ComboBoxItem.MouseOver.Background}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ContextMenu x:Key="TextBoxContextMenu" Background="White">
            <MenuItem Command="ApplicationCommands.Copy" />
            <MenuItem Command="ApplicationCommands.Cut" />
            <!--<MenuItem Command="ApplicationCommands.Paste" />-->
        </ContextMenu>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True" 
                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" Background="{TemplateBinding Background}" CornerRadius="5"
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Fill"
                                          Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " 
                                          Fill="{StaticResource OptionMark.Static.Glyph}" Margin="5" Opacity="0"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    
    </Application.Resources>
</Application>
